{
  "animatorMap": {
    "COMMENT": "Animation Graph for the Digit Copy Tutor",

    "digit_copy": {

      "type": "ANIMATOR",
      "title": "Digit copying tutor",
      "COMMENT": "This tutor is designed for copying single digit numbers 0-9.",
      "version": "1.0.0",
      "rootnode": "INTRO_STATE",

      "nodeMap": {

        "COMMENT": "@@@@@  CNodes  @@@@@",

        "INTRO_STATE": {
          "type": "NODE",
          "COMMENT": "Intro Clip",
          "maptype":"actionMap",
          "mapname": "PLAYINTRO",
          "preenter":["GB_DISABLE","FW_DISABLE"],
          "preexit" :[],
          "edges": [
            {
              "constraint": "",
              "edge": "NEWCHAR"
            }
          ]
        },

        "NEWCHAR":{
          "COMMENT":"This node presents a digit for user to copy.",
          "type":"node",
          "preenter":["GETCHAR","DISPLAYCHAR"],
          "maptype":"actionMap",
          "mapname": "PLAYCHAR_TRACK",
          "preexit" :[],
          "edges":
          [
            {"constraint":"","edge":"USERINPUT"}
          ]
        },

        //How to set time limit for the recognizer?
        "USERINPUT":{
          "COMMENT":"When module is complete - move to next scene in the scenegraph",
          "type":"node",
          "maptype":"???",
          "mapname": "???",
          "preenter":["FW_ENABLE"],
          "state"   :[],
          "preexit" :["FW_DISABLE"],
          "edges":
          [
            {"constraint":"FTR_RIGHT","edge":"CORRECT"},
            {"constraint":"FTR_WRONG","edge":"WRONG"},
            {"constraint":"FTR_UNRECOGNIZED","edge":"UNRECOGNIZED"},
            {"constraint":"","edge":"HESITATION"}						]
        },

        "CORRECT":{
          "COMMENT":"When user inputs a correct answer...",
          "type":"node",
          "maptype":"actionMap",
          "mapname": "PLAYCORRECT",
          "preenter":[],
          "preexit" :["REMOVEINPUT","REMOVEMODEL"],
          "edges":
          [
            {"constraint":"COND_PASS1","edge":"EXITCLIP1"},
            {"constraint":"COND_PASS2","edge":"EXITCLIP2"},
            {"constraint":"","edge":"NEWCHAR"}
          ]
        },

        "WRONG":{
          "COMMENT":"When user inputs an incorrect answer...",
          "type":"node",
          "maptype":"actionMap",
          "mapname": "WRONG_TRACK",
          "preenter":["MARKINRED"],
          "preexit" :["REMOVEINPUT"],
          "edges":
          [

            {"constraint":"","edge":"USERINPUT"}
          ]
        },

        "UNRECOGNIZED":{
          "COMMENT":"When the recognizer fails to identify the input...",
          "type":"node",
          "maptype":"actionMap",
          "mapname": "UNRECOGNIZED_TRACK",
          "preenter":["MARKRED"],
          "preexit" :["REMOVEINPUT"],
          "edges":
          [
            {"constraint":"","edge":"USERINPUT"}
          ]
        },

        "HESITATION":{
          "COMMENT":"When the user doesn't write anything...",
          "type":"node",
          "maptype":"actionMap",
          "mapname": "HESITATION_TRACK",
          "preenter":[],
          "preexit" :[],
          "edges":
          [
            {"constraint":"","edge":"USERINPUT"}
          ]
        },

        "EXITCLIP1": {
          "COMMENT":"Exit Clip for ALL_CORRECT",
          "type":"node",
          "maptype":"actionMap",
          "mapname": "EXIT1_TRACK",
          "preenter":[],
          "preexit" :[],
          "edges":
          [
            {"constraint":"","edge":"NEXTSCENE"}
          ]
        },

        "EXITCLIP2": {"COMMENT":"Exit Clip for NOT_ALL_CORRECT",
          "type":"node",
          "maptype":"actionMap",
          "mapname": "EXIT2_TRACK",
          "preenter":[],
          "preexit" :[],
          "edges":
          [
            {"constraint":"","edge":"NEXTSCENE"}
          ]
        },

        "NEXTSCENE": {
          "type": "NODE",
          "COMMENT": "When module is complete - move to next scene in the scenegraph",
          "preenter": [],
          "preexit": [],
          "edges": [
          ]
        }
      },

      "moduleMap": {

        "COMMENT": "@@@@@  CModules  @@@@@",

        "PLAYCORRECT": {
          "type": "MODULE",
          "reuse":true,
          "COMMENT": "???",
          "tracks": [
            {"type": "AUDIO", "command": "PLAY", "soundsource": "good.mp3", "features": ""}
          ]
        },

        "PLAYWRONG": {
          "type": "MODULE",
          "reuse":true,
          "COMMENT": "???",
          "tracks": [
            {"type": "AUDIO", "command": "PLAY", "soundsource": "that looks like the number.mp3", "features": ""},
            {"type": "AUDIO", "command": "PLAY", "soundsource": "charprompt_{{rec_char}}", "features": ""},  // a value returned by the recognizer
            {"type": "AUDIO", "command": "PLAY", "soundsource": "try again.mp3", "features": ""}
          ]
        }
      },

      "actionMap": {

        "my_action": {"type": "TIMER", "name": "hint_timeout", "duration":"20", "repeat":"false", "action":"START", "ontimer":"ACTION_NAME", "features": "" },

        "COMMENT": "@@@@@  CActions @@@@@ ",

        "PLAYINTRO":{"type": "AUDIO", "command": "PLAY", "soundsource": "Now letâ€™s practice writing some some numbers.wav", "features": ""},
        "PLAYCORRECT":{"type": "AUDIO", "command": "PLAY", "soundsource": "Good.wav", "features": ""},

        "GB_DISABLE":{"target":"goButton","Method":"enable", "value":"false"},
        //disable Go button
        "GB_ENABLE":{"target":"goButton","Method":"enable", "value":"true"},
        //enable Go button

        "FW_DISABLE":{},
        //disable FingerWriting
        "FW_ENABLE":{},
        //enable FingerWriting

        "GETCHAR":{},
        //get a new digit from the list.

        "REMOVEINPUT":{},
        //remove the preview string

        "REMOVEMODEL":{},
        //remove the stimulus

        "DISPLAYCHAR":{},
        //display the stimulus (value of "GETCHAR")

        "MARKRED":{},
        //mark the preview string in red color

        "PLAYCHAR_TRACK":{
          "type": "TIMELINE","trackname": "???", "features": ""
        },
        // 1: This is the number.wav
        // 2: {{VAR_CHAR}} the stimulus digit
        // 3: Please write the number.wav
        // 4: with your finger.wav

        "WRONG_TRACK":{
          "type": "TIMELINE","trackname": "???", "features": ""
        },
        // 1: That looks like.wav
        // 2: {{VAR_CHAR}} the recognized digit
        // 3: Try again.wav

        "UNRECOGNIZED_TRACK":{
          "type": "TIMELINE","trackname": "???", "features": ""
        },
        // 1: Huh.wav
        // 2: That doesn't look like.wav
        // 3. {{VAR_CHAR}} the stimulus digit
        // 4: Try again.wav

        "HESITATION_TRACK":{
          "type": "TIMELINE","trackname": "???", "features": ""
        },
        // 1: Please write the number.wav
        // 2: {{VAR_CHAR}} the stimulus digit

        "EXIT1_TRACK":{
          "type": "TIMELINE","trackname": "???", "features": ""
        },
        // 1: Good job.wav
        // 2: You wrote all of them correctly.wav

        "EXIT2_TRACK":{
          "type": "TIMELINE","trackname": "???", "features": ""
        },
        // 1: Good job.wav
        // 2: Next time you can do better.wav

        "NEXTSCENE": {
          "type": "COMMAND", "cmd": "gotoNextScene"
        }
      },

      "constraintMap": {

        "COMMENT": "@@@@@  CConstraints @@@@@ ",

        "COND_PASS1": {
          "type": "CONDITION",
          "If": "FTR_NOWORDS && ALL_CORRECT",
          "Then":"",
          "Else":""
        },

        "COND_PASS2": {
          "type": "CONDITION",
          "If": "FTR_NOWORDS && NOT_ALL_CORRECT",
          "Then":"",
          "Else":""
        },

        "FTR_NOWORDS":{
          "type": "CONDITION",
          "cmd":"test",
          "code":"FTR_NOWORDS"
        },

        "FTR_WORDS":{
          "type": "CONDITION",
          "cmd":"test",
          "code":"!FTR_NOWORDS"
        },

        "ALL_CORRECT":{
          "type": "CONDITION",
          "cmd":"test",
          "code":"ALL_CORRECT"
        },

        "NOT_ALL_CORRECT":{
          "type": "CONDITION",
          "cmd":"test",
          "code":"!ALL_CORRECT"
        },

        "FTR_RIGHT":{
          "type": "CONDITION",
          "cmd":"test",
          "code":"FTR_RIGHT"
        },

        "FTR_WRONG":{
          "type": "CONDITION",
          "cmd":"test",
          "code":"FTR_WRONG"
        },

        "FTR_UNRECOGNIZED":{
          "type": "CONDITION",
          "cmd":"test",
          "code":"FTR_UNRECOGNIZED"
        }
      }
    }
  }
}
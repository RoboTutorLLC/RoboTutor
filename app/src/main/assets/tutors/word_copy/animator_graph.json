{
  "animatorMap": {
    "COMMENT": "Animation Graph for the Word Copy Tutor",

    "word_copy": {

      "type": "ANIMATOR",
      "title": "Word copying tutor",
      "COMMENT": "This tutor is designed for copying words.",
      "version": "1.0.0",
      "rootnode": "DEMO_SELECT",

      "subgraphMap": {

        "HESITATION_FEEDBACK": {
          "type": "SUBGRAPH",
          "rootnode": "INPUT_HESITATION_MODULE",

          "nodeMap": {
            "INPUT_HESITATION_MODULE": {
              "type": "MODULE",
              "COMMENT": "Interaction Demo",
              "preenter": [],
              "reuse": true,
              "tracks": [
                { "type": "AUDIO","command": "PLAY", "soundsource": "Please write the word.mp3","soundpackage": "default","mode": "flow", "features": ""},
                {"type": "AUDIO", "command": "PLAY", "soundsource": "{{word_copy.value}}.mp3",  "soundpackage": "words",  "mode": "flow", "features": ""} //the stimulus digit
              ],
              "preexit": [
              ],
              "edges": [
              ]
            }
          }
        }


      },

      "nodeMap": {

        "COMMENT": "@@@@@  CNodes  @@@@@",

        // TODO: Setup some criteria for when to present the demo

        "DEMO_SELECT": {
          "type": "NODE",
          "COMMENT": "Intro Clip",
          "maptype":"moduleMap",
          "mapname": "EMPTY_MODULE",
          "preenter":["SET_CONSTRAINT"],
          "preexit" :[],
          "edges": [
            {"constraint": "FTR_NO_DEMO", "edge": "INTRO_STATE"},
            {"constraint": "", "edge": "DEMO_STATE"}
          ]
        },

        "DEMO_STATE": {
          "type": "NODE",
          "COMMENT": "Interaction Demo",
          "maptype":"moduleMap",
          "mapname":"DEMO_MODULE",
          "preenter":["SET_VERSION","SET_DEMOSOURCE","FW_DISABLE","NEXT_DATA_ITEM"],
          "preexit" :[],
          "edges": [
            {
              "constraint": "",
              "edge": "INTRO_STATE"
            }
          ]
        },

        "INTRO_STATE": {
          "type": "NODE",
          "COMMENT": "Intro Clip",
          "maptype":"moduleMap",
          "mapname": "PLAYINTRO",
          "preenter":["SET_VERSION","SET_DATASOURCE","FW_DISABLE"],
          "preexit" :[],
          "edges": [
            {
              "constraint": "",
              "edge": "NEXTITEM"
            }
          ]
        },

        "NEXTITEM":{
          "COMMENT":"This node presents a word for user to copy.",
          "type":"node",
          "preenter":["NEXT_DATA_ITEM"],
          "maptype":"moduleMap",
          "mapname": "PLAYWORD",
          "preexit" :[],
          "edges":
          [
            {"constraint":"","edge":"INPUTLETTER"}
          ]
        },

        "INPUTLETTER":{
          "COMMENT":"Input a letter",
          "type":"node",
          "maptype":"moduleMap",
          "mapname": "FINGERWRITING",
          "preenter":["FW_ENABLE"],
          "preexit" :["FW_DISABLE"],
          "edges":
          [
            {"constraint":"COND_PASS1","edge":"EXITCLIP1"},
            {"constraint":"COND_PASS2","edge":"EXITCLIP2"},
            {"constraint":"","edge":"NEXTITEM"}
          ]
        },

        "CORRECT":{
          "COMMENT":"When user inputs a correct answer...",
          "type":"node",
          "maptype":"moduleMap",
          "mapname": "PLAYCORRECT",
          "preenter":[],
          "preexit" :["REMOVERESPONSE","REMOVESTIMULUS"],
          "edges":
          [
            {"constraint":"COND_PASS1","edge":"EXITCLIP1"},
            {"constraint":"COND_PASS2","edge":"EXITCLIP2"},
            {"constraint":"","edge":"NEXTITEM"}
          ]
        },

        "WRONG":{
          "COMMENT":"When user inputs an incorrect answer...",
          "type":"node",
          "maptype":"moduleMap",
          "mapname": "PLAYWRONG",
          "preenter":[],
          "preexit" :["REMOVERESPONSE"],
          "edges":
          [

            {"constraint":"","edge":"USERINPUT"}
          ]
        },

        "UNRECOGNIZED":{
          "COMMENT":"When the recognizer fails to identify the input...",
          "type":"node",
          "maptype":"moduleMap",
          "mapname": "PLAYUNRECOGNIZED",
          "preenter":[],
          "preexit" :["REMOVERESPONSE"],
          "edges":
          [
            {"constraint":"","edge":"USERINPUT"}
          ]
        },

        "EXITCLIP1": {
          "COMMENT":"Exit Clip for ALL_CORRECT",
          "type":"node",
          "maptype":"moduleMap",
          "mapname": "PLAYEXIT1",
          "preenter":[],
          "preexit" :[],
          "edges":
          [
            {"constraint":"","edge":"NEXTSCENE"}
          ]
        },

        "EXITCLIP2": {"COMMENT":"Exit Clip for NOT_ALL_CORRECT",
          "type":"node",
          "maptype":"moduleMap",
          "mapname": "PLAYEXIT2",
          "preenter":[],
          "preexit" :[],
          "edges":
          [
            {"constraint":"","edge":"NEXTSCENE"}
          ]
        },

        "NEXTSCENE": {
          "type": "NODE",
          "COMMENT": "When module is complete - move to next scene in the scenegraph",
          "maptype":"actionMap",
          "mapname":"GOTONEXTSCENE",
          "preenter": [],
          "preexit": [],
          "edges": [
          ]
        }
      },

      "moduleMap": {

        "COMMENT": "@@@@@  CModules  @@@@@",

        "EMPTY_MODULE": {
          "type":"MODULE",
          "reuse":true,
          "COMMENT": "Do Nothing",
          "tracks": [
          ]
        },

        "SET_DEMOSOURCE": {
          "type":"MODULE",
          "reuse":true,
          "COMMENT": "Initialize the data source - ",
          "tracks": [
            {"type": "COMMAND", "id": "word_copy", "method": "pushDataSource", "parms": "[saba]:String","features":"LANG_SW"},
            {"type": "COMMAND", "id": "word_copy", "method": "pushDataSource", "parms": "[one]:String", "features":"LANG_EN"}
          ]
        },

        "DEMO_MODULE": {
          "type":"MODULE",
          "reuse":true,
          "COMMENT": "Initialize the data source - ",

          "tracks": [
            // Disable the writing controllers while the demo is in progress
            {"type": "COMMAND", "id": "word_copy", "method": "inhibitInput", "parms": "TRUE:Boolean","features":""},

            // When the word replay is complete move to the next node
            {"type": "COMMAND", "id": "word_copy", "method": "setVolatileBehavior", "parms": "REPLAY_COMPLETE:String|NEXT_NODE:String" ,"features":""},
            {"type": "COMMAND", "id": "word_copy", "method": "postEvent",           "parms": "RIPPLE_DEMO:String|500:Integer",          "features":""},

            // This will play during the demo replay
            {"type": "AUDIO", "command": "PLAY", "soundsource": "Now lets practice writing some words.mp3", "soundpackage":"default", "volume": 1.0, "mode":"stream", "features": ""},

            // Next will fire when replay completes
            {"type": "COMMAND", "id": "word_copy", "method": "clear", "parms": "", "features":""},
            {"type": "AUDIO", "command": "PLAY", "soundsource": "Now you try it.mp3", "soundpackage":"default", "volume": 1.0, "mode":"flow", "features": ""},

            // Restore the initial datasource if present
            {"type": "COMMAND", "id": "word_copy", "method": "popDataSource", "features":""},

            {"type": "COMMAND", "id": "word_copy", "method": "inhibitInput", "parms": "FALSE:Boolean","features":""},
            {"type": "COMMAND", "cmd":"FEATURE-ADD", "value": "FTR_DEMO_SHOWN", "features":""}
          ]
        },

        "PLAYINTRO":{
          "type": "MODULE",
          "reuse":true,
          "COMMENT": "TBD",
          "tracks": [
            {"type": "AUDIO", "command": "PLAY", "soundsource": "Now lets practice writing some words.mp3", "mode":"flow", "features": "!FTR_DEMO_SHOWN"}
          ]
        },

        "PLAYWORD": {
          "type": "MODULE",
          "reuse":true,
          "COMMENT": "TBD",
          "tracks": [
            {"type": "COMMAND", "id": "Sstimulus", "method": "zoomInOut", "parms": "2.0:Float:1000:Long","features":""},
            {"type": "AUDIO", "command": "PLAY", "soundsource": "{{word_copy.value}}.mp3","soundpackage": "words","mode":"flow", "features": ""}
          ]
        },


        "FINGERWRITING":{
          "type":"MODULE",
          "reuse":true,
          "COMMENT": "FingerWriting Module",
          "tracks": [
            {"type": "COMMAND", "id": "word_copy", "method": "setVolatileBehavior", "parms": "ON_START_WRITING:String|CANCEL_HESITATION_FEEDBACK:String" ,"features":""},
            {"type": "COMMAND", "id": "word_copy", "method": "postNamed",           "parms": "HESITATION_PROMPT:String|SUBGRAPH_CALL:String|HESITATION_FEEDBACK:String|6000:Long",  "features":""},

            {"type": "COMMAND", "id": "word_copy", "method": "setVolatileBehavior", "parms": "ITEM_COMPLETE:String|NEXT_NODE:String" ,"features":""},
            {"type": "COMMAND", "cmd": "WAIT" }
          ]
        },

        "PLAYCORRECT":{
          "type": "MODULE",
          "reuse":true,
          "COMMENT": "TBD",
          "tracks": [
            {"type": "COMMAND", "id": "Sresponse", "method": "setForeGround", "parms": "normal:String","features":""}, //set the correct string in normal color
            {"type": "AUDIO", "command": "PLAY", "soundsource": "Good.mp3","mode":"flow", "features": ""}
          ]
        },

        "PLAYWRONG": {
          "type": "MODULE",
          "reuse":true,
          "COMMENT": "TBD",
          "tracks": [
            {"type": "COMMAND", "id": "Sresponse", "method": "setForeGround", "parms": "wrong:String","features":""}, //flag the incorrect string in red color
            {"type": "AUDIO", "command": "PLAY", "soundsource": "That looks like.mp3", "mode":"flow","features": ""},
            {"type": "AUDIO", "command": "PLAY", "soundsource": "{{Sresponse.value}}.mp3","mode":"flow", "features": ""},  // the recognizer output
            {"type": "AUDIO", "command": "PLAY", "soundsource": "Try again.mp3","mode":"flow", "features": ""}
          ]
        },

        "PLAYUNRECOGNIZED": {
          "type": "MODULE",
          "reuse":true,
          "COMMENT": "TBD",
          "tracks": [
            {"type": "COMMAND", "id": "Sresponse", "method": "setForeGround", "parms": "wrong:String","features":""}, //flag the incorrect string in red color
            {"type": "AUDIO", "command": "PLAY", "soundsource": "Huh.mp3", "mode":"flow","features": ""},
            {"type": "AUDIO", "command": "PLAY", "soundsource": "That doesnt look like.mp3", "mode":"flow","features": ""},
            {"type": "AUDIO", "command": "PLAY", "soundsource": "{{word_copy.value}}.mp3","mode":"flow", "features": ""}, //the stimulus digit
            {"type": "AUDIO", "command": "PLAY", "soundsource": "Try again.mp3","mode":"flow", "features": ""}
          ]
        },

        "PLAYEXIT1":{
          "type": "MODULE",
          "reuse":true,
          "COMMENT": "TBD",
          "tracks": [
            {"type": "AUDIO", "command": "PLAY", "soundsource": "You did a good job.mp3", "soundpackage":"xprize", "mode":"flow", "features": ""},
            {"type": "AUDIO", "command": "PLAY", "soundsource": "You wrote all of them correctly.mp3", "soundpackage":"xprize", "mode":"flow", "features": ""}
          ]
        },

        "PLAYEXIT2":{
          "type": "MODULE",
          "reuse":true,
          "COMMENT": "TBD",
          "tracks": [
            {"type": "AUDIO", "command": "PLAY", "soundsource": "You did a good job.mp3", "soundpackage":"xprize", "mode":"flow", "features": ""},
            {"type": "AUDIO", "command": "PLAY", "soundsource": "Next time you can do better.mp3", "soundpackage":"xprize", "mode":"flow", "features": ""}
          ]
        },

        "SET_DATASOURCE": {
          "type":"MODULE",
          "reuse":true,
          "COMMENT": "Initialize the data source - ",
          "tracks": [
            {"type": "COMMAND", "id": "word_copy", "method": "setDataSource", "parms": "[saba,sifuri,mbili]:String","features":"!DATA_WORD_COPY&LANG_SW"},
            {"type": "COMMAND", "id": "word_copy", "method": "setDataSource", "parms": "[one,two,three]:String","features":"!DATA_WORD_COPY&LANG_EN"}
          ]
        }
      },

      "actionMap": {

        "my_action": {"type": "TIMER", "name": "hint_timeout", "duration":"20", "repeat":"false", "action":"START", "ontimer":"ACTION_NAME", "features": "" },

        "COMMENT": "@@@@@  CActions @@@@@ ",

        "SET_VERSION":{"type": "COMMAND", "id": "Sbanner", "method": "setVersionID", "parms": "v.0.1.0:String","features":""},

        "CANCEL_HESITATION_FEEDBACK": {"type": "COMMAND", "id": "word_copy", "method": "cancelPost", "parms": "HESITATION_PROMPT:String",  "features":""},


        "FW_DISABLE":{"type": "COMMAND", "id": "word_copy", "method": "inhibitInput", "parms": "TRUE:Boolean","features":""},
        //disable FingerWriting
        "FW_ENABLE":{"type": "COMMAND", "id": "word_copy", "method": "inhibitInput", "parms": "FALSE:Boolean","features":""},
        //enable FingerWriting

        // Set the LTK+ metric constraint
        "SET_CONSTRAINT":{"type": "COMMAND", "id": "word_copy", "method": "setConstraint", "parms": "H,0.45;W,0.45;Y,0.25;X,0.25:String", "features":""},

        "NEXT_DATA_ITEM":{"type": "COMMAND", "id": "word_copy", "method": "next" ,"features":""},
        //get a new digit from the list.

        //"GETRESPONSE":{"type": "COMMAND", "id": "Sresponse", "method": "???" ,"features":""},
        //get the recognized character from the recognizer???

        "SHOWRESPONSE":{"type": "COMMAND", "id": "Sresponse", "method": "show", "parms": "TRUE:Boolean","features":""},
        "REMOVERESPONSE":{"type": "COMMAND", "id": "Sresponse", "method": "clear", "features":""},
        //remove the preview string

        "SHOWSTIMULUS":{"type": "COMMAND", "id": "Sstimulus", "method": "show", "parms": "TRUE:Boolean","features":""},
        "REMOVESTIMULUS":{"type": "COMMAND", "id": "Sstimulus", "method": "show", "parms": "FALSE:Boolean","features":""},
        //remove the stimulus

        // support the ASK component
        "INIT_ASK":     {"type": "COMMAND", "id": "Spicker", "method": "setStickyBehavior", "parms": "SPEAK_BUTTON:String|PICKER_TRACK:String" ,"features":""},
        "PICKER_TRACK": {"type": "TIMELINE", "trackname": "ASK_BUTTON", "features": ""},

        "GOTONEXTSCENE":   {"type": "COMMAND", "cmd": "NEXTSCENE"},
        "RETURN_AND_GO":   {"type": "COMMAND", "cmd": "SUBGRAPH_RETURN_AND_GO"},
        "RETURN_AND_WAIT": {"type": "COMMAND", "cmd": "SUBGRAPH_RETURN_AND_WAIT"},
        "NEXT_NODE":       {"type": "COMMAND", "cmd": "NEXT"  },
        "WAIT":            {"type": "COMMAND", "cmd": "WAIT"  }
      },

      "constraintMap": {

        "COMMENT": "@@@@@  CConstraints @@@@@ ",

        "COND_PASS1": {
          "type": "CONDITION",
          "If": "FTR_NOWORDS && ALL_CORRECT",
          "Then":"true",
          "Else":"false"
        },

        "COND_PASS2": {
          "type": "CONDITION",
          "If": "FTR_NOWORDS && NOT_ALL_CORRECT",
          "Then":"true",
          "Else":"false"
        },

        "FTR_NOWORDS":{
          "type": "CONDITION",
          "test":"FTR_NOWORDS"
        },

        "FTR_WORDS":{
          "type": "CONDITION",
          "test":"!FTR_NOWORDS"
        },

        "FTR_NO_DEMO":{
          "type": "CONDITION",
          "test":"FTR_NO_DEMO"
        },

        "ALL_CORRECT":{
          "type": "CONDITION",
          "test":"ALL_CORRECT"
        },

        "NOT_ALL_CORRECT":{
          "type": "CONDITION",
          "test":"!ALL_CORRECT"
        },

        "FTR_RIGHT":{
          "type": "CONDITION",
          "test":"FTR_RIGHT"
        },

        "FTR_WRONG":{
          "type": "CONDITION",
          "test":"FTR_WRONG"
        },

        "FTR_UNRECOGNIZED":{
          "type": "CONDITION",
          "test":"FTR_UNRECOGNIZED"
        }
      }
    }
  }
}